apiVersion: v1
kind: Service
metadata:
  name: ${PROJECT_NAME}-web-service
spec:
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
  type: LoadBalancer
  selector:
    service: ${PROJECT_NAME}-web-service
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ${PROJECT_NAME}-web
spec:
  replicas: 1
  template:
    metadata:
      labels:
        service: ${PROJECT_NAME}-web
    spec:
      containers:
        # [START ${PROJECT_NAME}-web]
        - name: ${PROJECT_NAME}-web
          imagePullPolicy: Always
          image: gcr.io/${GCP_PROJECT}/${PROJECT_NAME}:master
          # The gunicorn command is kept in the kubernetes config
          # so that workers can be scaled without any code changes.
          command: ['gunicorn', '-b', '0.0.0.0:8000', '-w', '4', '--worker-class', 'gevent', '--timeout', '60', '--pythonpath', '$PWD', 'wsgi']
          ports:
            - containerPort: 8000
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: ${PROJECT_NAME}-secret
                  key: secret_key
            - name: DB_HOST
              value: sqlproxy-service-${PROJECT_NAME}:5432
            - name: DB_NAME
              value: ${DB_NAME}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
          volumeMounts:
            - name: keys
              mountPath: '/etc/keys'
              readOnly: true
        # [END ${PROJECT_NAME}-web]
      # [START volumes]
      volumes:
        # STACKDRIVER trace keys
        # The trace keys are used for integrating with
        # GCP's Stackdriver tracing service.
        - name: keys
          secret:
            secretName: trace-secret
        # The credentials for cloudsql
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
      # [END volumes]
      # [START initContainers]
      initContainers:
        # [START check]
        # Check is an init container which runs Django's
        # check management command. If it fails, the deployment
        # will stay in pending state.
        - name: check-${PROJECT_NAME}
          imagePullPolicy: Always
          image: gcr.io/${GCP_PROJECT}/${PROJECT_NAME}:master
          command: ['python', 'manage.py', 'check']
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: ${PROJECT_NAME}-secret
                  key: secret_key
            - name: DB_HOST
              value: sqlproxy-service-${PROJECT_NAME}:5432
            - name: DB_NAME
              value: ${DB_NAME}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
        # [END check]
        # [START migrations]
        # Runs Django migrations, if failed, the deployment
        # will stay in pending state.
        - name: migrations-${PROJECT_NAME}
          imagePullPolicy: Always
          image: gcr.io/${GCP_PROJECT}/${PROJECT_NAME}:master
          command: ['python', 'manage.py', 'migrate']
          env:
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: ${PROJECT_NAME}-secret
                  key: secret_key
            - name: DB_HOST
              value: sqlproxy-service-${PROJECT_NAME}:5432
            - name: DB_NAME
              value: ${DB_NAME}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
